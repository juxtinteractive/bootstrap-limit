/*!
 * bootstrap-limit.js 0.0.1
 * https://github.com/trongrg/bootstrap-limit
 * Copyright 2013 TrongTran and other contributors; Licensed MIT
 */

var VERSION="0.0.1";!function(t){"use strict";var i=function(i,e){this.$element=t(i),this.options=t.extend({},t.fn.limit.defaults,e),this.maxLength=this.options.maxLength||this.maxLength,this.counter=t(this.options.counter)||this.counter,this.initialize(),this.listen(),this.check()};i.prototype={constructor:i,initialize:function(){var i=this.$element;t.when.apply(t,this.$element).always(function(){setTimeout(function(){i.trigger("bootstrap-limit:initialized")},0)})},listen:function(){this.$element.on("keypress",t.proxy(this.keypress,this)).on("keyup",t.proxy(this.keyup,this))},check:function(){this.query=this.$element.val(),this.counter.text(this.maxLength-this.query.length),this.query.length>this.maxLength?(this.counter.css("color","red"),this.$element.trigger("bootstrap-limit:crossed")):(this.counter.css("color",""),this.$element.trigger("bootstrap-limit:uncrossed"))},keyup:function(t){this.check(),t.stopPropagation(),t.preventDefault()},keypress:function(t){this.check(),t.stopPropagation()}},t.fn.limit=function(e){return this.each(function(){var n=t(this),s=n.data("limit"),o="object"==typeof e&&e;s||n.data("limit",s=new i(this,o)),"string"==typeof e&&s[e]()})},t.fn.limit.defaults={maxLength:140,counter:""},t.fn.limit.Constructor=i,t(function(){t("body").on("focus.limit.data-api",'[data-provide="limit"]',function(i){var e=t(this);e.data("limit")||(i.preventDefault(),e.limit(e.data()))})})}(window.jQuery);